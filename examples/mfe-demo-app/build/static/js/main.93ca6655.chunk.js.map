{"version":3,"sources":["appConstants.js","App.js","index.js"],"names":["appConstants","modes","mfe","standalone","App","useState","numWaterBuffalo","setNumWaterBuffalo","className","onClick","repeat","fancyConsoleLog","input","console","log","performance","now","mfeRoot","document","getElementById","fallbackRoot","runningMode","renderTarget","renderFn","ReactDOM","render","StrictMode","window","renderTestMfe"],"mappings":"mLAMeA,EANM,CACnBC,MAAO,CACLC,IAAK,MACLC,WAAY,e,6BCmBDC,MAnBf,WAAgB,IAAD,EACiCC,mBAAS,GAD1C,mBACNC,EADM,KACWC,EADX,KAGb,OACE,qBACEC,UAAU,MACVC,QAAS,kBAAMF,EAAmBD,EAAkB,IAFtD,SAIE,yBAAQE,UAAU,aAAlB,UACE,oBAAIA,UAAU,OAAd,SAAsB,eAAKE,OAAOJ,KAClC,+CACA,yGCPFK,EAAkB,SAACC,GACvBC,QAAQC,IAAR,0BACWC,YAAYC,MADvB,mBACuCJ,GACrC,6DAKEK,EAAUC,SAASC,eAAe,YAGlCC,EAAeF,SAASC,eAAe,QAEvCE,EAAcJ,EAChBjB,EAAaC,MAAMC,IACnBF,EAAaC,MAAME,WAGjBmB,EAAeL,GAAWG,EAChCT,EAAgB,+DAAD,OACkDU,EADlD,UAKf,IAAME,EAAW,kBACfC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAGFJ,IAIJX,EACE,mEAGEU,IAAgBrB,EAAaC,MAAME,WAGrCoB,KAEAZ,EAAgB,oBAAD,OACOU,EADP,uDAKfM,OAAOC,cAAgBL,I","file":"static/js/main.93ca6655.chunk.js","sourcesContent":["const appConstants = {\r\n  modes: {\r\n    mfe: \"MFE\",\r\n    standalone: \"STANDALONE\",\r\n  },\r\n};\r\nexport default appConstants;\r\n","import { useState } from \"react\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  const [numWaterBuffalo, setNumWaterBuffalo] = useState(1);\r\n\r\n  return (\r\n    <div\r\n      className=\"App\"\r\n      onClick={() => setNumWaterBuffalo(numWaterBuffalo + 1)}\r\n    >\r\n      <header className=\"App-header\">\r\n        <h1 className=\"hero\">{\"üêÉ\".repeat(numWaterBuffalo)}</h1>\r\n        <div>I am the MFE</div>\r\n        <p>\r\n          Click anywhere in the MFE to increase the water buffalo population\r\n        </p>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport appConstants from \"./appConstants\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nconst fancyConsoleLog = (input) => {\r\n  console.log(\r\n    `%cüêÉ [${performance.now()} ms]\\n\\n${input}`,\r\n    \"color: #fefefe; background-color: #34f; font-size: 24px;\"\r\n  );\r\n};\r\n\r\n// this is a little more complex in the real world, but this is the idea...\r\nconst mfeRoot = document.getElementById(\"mfe-root\");\r\n\r\n// if we can't find the mfeRoot above, we must be running in standalone mode\r\nconst fallbackRoot = document.getElementById(\"root\");\r\n\r\nconst runningMode = mfeRoot\r\n  ? appConstants.modes.mfe\r\n  : appConstants.modes.standalone;\r\n\r\n// only attempt to render in the mfeRoot if it actually exists!\r\nconst renderTarget = mfeRoot || fallbackRoot;\r\nfancyConsoleLog(\r\n  `setting final render target, it looks like we're running in ${runningMode} mode`\r\n);\r\n\r\n// wrap the render function in *another* function so that we can control when it's called\r\nconst renderFn = () =>\r\n  ReactDOM.render(\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>,\r\n    // use the renderTarget that actually exists, whichever it is\r\n    renderTarget\r\n  );\r\n\r\n// make the renderTestMfe function available globally on the window object -- this is important!\r\nfancyConsoleLog(\r\n  \"setting window.renderTestMfe equal to the React render function\"\r\n);\r\n\r\nif (runningMode === appConstants.modes.standalone) {\r\n  // we only need to actually call the renderFn ourselves if we're running in standalone mode\r\n  // if we're running in MFE mode, the container will call this function for us!\r\n  renderFn();\r\n} else {\r\n  fancyConsoleLog(\r\n    `We're running in ${runningMode} mode, so there's no need to call renderFn() here!`\r\n  );\r\n\r\n  // in fact, we don't need to expose this renderFn function to the global window object unless we're running in MFE mode\r\n  window.renderTestMfe = renderFn;\r\n}\r\n"],"sourceRoot":""}